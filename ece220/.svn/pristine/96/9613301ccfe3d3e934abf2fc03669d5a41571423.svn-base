Compilation Results:
********************
sparsemat.c: In function 'set_tuples':
sparsemat.c:68:19: warning: variable 'prev' set but not used [-Wunused-but-set-variable]
  sp_tuples_node * prev = mat_t->tuples_head;
                   ^
sparsemat.c: In function 'add_tuples':
sparsemat.c:120:12: warning: unused variable 'j' [-Wunused-variable]
     int i, j;
            ^
sparsemat.c:120:9: warning: unused variable 'i' [-Wunused-variable]
     int i, j;
         ^

load_tuples test: 10 pts total
Test 1: load tuple
+5: load_tuples: m,n,nnz match
+5: load_tuples: nodes match

gv_tuples test: 5 pts total
Test 2: gv
+5: gv_tuples

set_tuples test: 35 pts total
Test 3: set
values in node does not match
nz doesn't match
nz doesn't match
nz doesn't match
nz doesn't match
nz doesn't match
nz doesn't match

add_tuples test: 10 pts total
Test 4: add
 nz doesn't match

mult_tuples test: 15 pts total
Test 5: mult
 dimensions don't match

save_tuples test: 10 pts total
Test 6: save
testing save_tuples, saving to save_test_tuples.txt

Printing diff of save tuples. If empty, 10 pts

0
destroy_tuples test: 5 pts total
Printing valgrind output. If no memory leaks/errors, 5 pts
==11143== Memcheck, a memory error detector
==11143== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11143== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==11143== Command: ./test0 7
==11143== 
==11143== Conditional jump or move depends on uninitialised value(s)
==11143==    at 0x401E39: insert_tuples (sparsemat.c:227)
==11143==    by 0x401BA5: add_tuples (sparsemat.c:131)
==11143==    by 0x401160: main (test0.c:410)
==11143== 
==11143== Conditional jump or move depends on uninitialised value(s)
==11143==    at 0x401E43: insert_tuples (sparsemat.c:227)
==11143==    by 0x401BA5: add_tuples (sparsemat.c:131)
==11143==    by 0x401160: main (test0.c:410)
==11143== 
==11143== Conditional jump or move depends on uninitialised value(s)
==11143==    at 0x401E87: insert_tuples (sparsemat.c:230)
==11143==    by 0x401BA5: add_tuples (sparsemat.c:131)
==11143==    by 0x401160: main (test0.c:410)
==11143== 
==11143== Conditional jump or move depends on uninitialised value(s)
==11143==    at 0x401EC8: insert_tuples (sparsemat.c:239)
==11143==    by 0x401BA5: add_tuples (sparsemat.c:131)
==11143==    by 0x401160: main (test0.c:410)
==11143== 
==11143== 
==11143== HEAP SUMMARY:
==11143==     in use at exit: 24 bytes in 1 blocks
==11143==   total heap usage: 66 allocs, 65 frees, 2,672 bytes allocated
==11143== 
==11143== LEAK SUMMARY:
==11143==    definitely lost: 24 bytes in 1 blocks
==11143==    indirectly lost: 0 bytes in 0 blocks
==11143==      possibly lost: 0 bytes in 0 blocks
==11143==    still reachable: 0 bytes in 0 blocks
==11143==         suppressed: 0 bytes in 0 blocks
==11143== Rerun with --leak-check=full to see details of leaked memory
==11143== 
==11143== For counts of detected and suppressed errors, rerun with: -v
==11143== Use --track-origins=yes to see where uninitialised values come from
==11143== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)

Grade:
******
Late submission: 0
Functionality: 15
Comments and Style: 
Intro paragraph: 
Total: 
